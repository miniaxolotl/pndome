datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId   String    @db.VarChar(16)
  email    String    @unique @db.VarChar(255)
  username String    @unique @db.VarChar(255)
  password String    @db.VarChar(255)
  deleted  DateTime?
  created  DateTime  @default(now())
  updated  DateTime  @updatedAt

  roles    UserRole[]
  sessions Session[]
  folders  UserFolder[]

  @@id([userId])
}

model Role {
  roleId    String @db.VarChar(16)
  authority Int    @unique @db.UnsignedTinyInt

  users UserRole[]

  @@id([roleId])
}

model UserRole {
  roleId  String   @db.VarChar(16)
  userId  String   @db.VarChar(16)
  created DateTime @default(now())

  role Role @relation(fields: [roleId], references: [roleId])
  user User @relation(fields: [userId], references: [userId])

  @@id([roleId, userId])
}

model Session {
  sessionId String    @unique @db.VarChar(64)
  userId    String    @db.VarChar(16)
  revoked   Boolean   @default(false)
  created   DateTime  @default(now())
  expires   DateTime?

  user User @relation(fields: [userId], references: [userId])

  @@id([sessionId, userId])
}

model Folder {
  folderId  String    @db.VarChar(16)
  name      String    @db.VarChar(255)
  password  String?   @db.VarChar(255)
  protected Boolean   @default(true)
  dCount    Int       @db.UnsignedInt
  vCount    Int       @db.UnsignedInt
  deleted   DateTime?
  created   DateTime  @default(now())
  updated   DateTime  @updatedAt

  files File[]
  users UserFolder[]

  @@id([folderId])
}

model File {
  fileId   String    @unique @db.VarChar(16)
  folderId String    @db.VarChar(16)
  name     String    @db.VarChar(255)
  type     String    @db.VarChar(32)
  ext      String    @db.VarChar(32)
  bytes    Int       @db.UnsignedInt
  sha256   String    @db.VarChar(64)
  md5      String    @db.VarChar(32)
  dCount   Int       @db.UnsignedInt
  vCount   Int       @db.UnsignedInt
  deleted  DateTime?
  created  DateTime  @default(now())
  updated  DateTime  @updatedAt

  folder     Folder          @relation(fields: [folderId], references: [folderId])
  timestamps FileTimestamp[]

  @@id([fileId, folderId])
}

model UserFolder {
  userId   String  @db.VarChar(16)
  folderId String  @db.VarChar(16)
  owner    Boolean @default(false)

  user User   @relation(fields: [userId], references: [userId])
  file Folder @relation(fields: [folderId], references: [folderId])

  @@id([userId, folderId])
}

model FileTimestamp {
  fileId  String   @db.VarChar(16)
  type    Int      @db.UnsignedTinyInt
  created DateTime @default(now())

  file File @relation(fields: [fileId], references: [fileId])

  @@id([fileId])
}
